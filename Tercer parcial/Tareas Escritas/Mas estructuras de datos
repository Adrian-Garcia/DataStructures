Hash
	a) Descripcion
		Funcion que puede ser usada para mapear data de un conjunto de datos estaticos o dinamicos. Sus valores regresados se les llaman hashes. Se utiliza para acelerar procesos de búsqueda de información repetida en una fila.

	b) Operaciones
		add(T element)
		clear()
		contains(T element)
		remove(T element)
		isEmpty()
		size()

	c) Ejemplo

		int main () {
				
			hash<int> hashTable;
			
			//add
			hash.add(1);
			
			//contains
			cout << (hash.contain(1)) ?
				"YES\n" : "NO\n"; 

			//remove
			hash.remove(1);

			//isEmpty
			cout << (hash.isEmpty()) ?
				"YES\n" : "NO\n";				

			//clear
			hash.clear();

			//size
			cout << hash.size() << endl;

			return 0;
		}

		/* Consola
		YES
		YES
		0
		*/

Set
	a) Descripcion
		Es un contenedor en el cual cada elemento perteneciente debe de ser unicos sin haber repetidos. No se pueden modificar pero si se pueden agregar y eliminar

	b) Operaciones
		insert(T element)
		begin()
		end()
		size()
		empty()

	c) Ejemplo
		
		int main() {
			set<int, greater <int> > s;

			//Insert
			s.insert(1);
			s.insert(2);
			s.insert(2);	//Solo se aniadira un 2
			s.insert(3);

			set <int, greater <int> > :: iterator iterador;

			//Begin, End
			for (int i = s.begin(); s != gquiz1.end(); ++i) { 
		        cout << *iterador << " "; 
		    } 

		    //Size
		    cout << endl << s.size() << endl;

		    //Empty
		    cout << (s.isEmpty())?
		    	"YES" : "NO";
		}

		/*Consola
		1 2 3
		3
		NO
		*/

Map
	a) Descripcion
		Contenedores  que almacenan elementos de forma mapeada. Cada elemento tiene un valor clave y un valor asignado. No hay dos valores con los mismos valores clave.

	b) Operaciones
		insert()
		begin()
		end()
		size()
		empty()
		erase()
		clear()

	c) Ejemplo

		int main() {

			map <int , int> m;

			//Insert
			m.insert(pair <int, int> (1,0));
			m.insert(pair <int, int> (2,1));
			m.insert(pair <int, int> (3,2));
			m.insert(pair <int, int> (4,3));

			map <int, int> :: iterator iterador; 

			//Begin, End
			for (int i = s.begin(); s != gquiz1.end(); ++i) { 
		        cout << iterator->first << "|"  << iterator->second << endl; 
		    } 

		    //Erase
		    m.erase(3);
		    
		    //Size
		    cout << endl << m.size() << endl;

		    //Clear
		    m.clear();

		    cout << (m.isEmpty()) ?
		    	"YES" : "NO";

			return 0;
		}

		/*Consola
		1|0
		2|1
		3|2
		4|3

		3
		YES
		*/